// [1] QueryDsl 버전 명시
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	// asciidoctor 플러그인 적용
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.side'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt // asciidoctorExt에 대한 종속성 구성 선언
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// database
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// spring security
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	//p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	
	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.amazonaws:aws-java-sdk-ses:1.12.3' // TODO) 삭제예정
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // 메일 템플릿용
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // 메일 템플릿용

	// jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// map struct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// spring rest docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// spring redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

ext { // spring rest docs
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

// spring rest docs
asciidoctor.doFirst {
	delete file("src/main/resources/static/docs")
}

asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

task copyDocument(type: Copy) { // build/docs 문서를 resources에 복사
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

// jar 파일에 포함
bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}

// queryDsl 추가
def generated = 'src/main/generated'
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}
sourceSets {
	main.java.srcDirs += [ generated ]
}
clean {
	delete file(generated)
}